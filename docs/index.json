{"project": "project", "project_url": "http://project-homepage.org/", "show_commit_url": "#", "hash_length": 8, "revision_to_hash": {"158": "c9645c4d116a515f28eb4a957b99401305a42e04", "234": "c7867a6f88978a48406b349063d225d53bf0ddfa", "264": "377a0dadab3bb8dd9f6a22fc71eb05ff09a53261", "266": "ea10a2648fd66ffce1ded50eccb2646864f3c5ca", "269": "15dc7868dc0c08d0f16e44f2f51208dd9ef2c5a8", "296": "8103e109070af3c76a744aaa0b1e596e39fa5466", "312": "4e16938603ec332274fc51e27095552b84b419c9", "313": "6139392b2b17b60ba0fba122d94cbc912fbb3c25", "342": "af3866f76fd27d3f5ddc213f9018ec792f8907d0", "363": "76bdb34fd7c0ba29ccd40cef0b0991d351066f19", "409": "a877097c1fedb2ea6e500bd6b47a157bdccbb08b", "415": "ec0d41e88b642754e02298f5935fe8ceee3f0125", "425": "27d80e3320fa8046da56d9ebb4c3e6fd4a798c36", "443": "99421d651d714b0265558810dea612b6fb66ed43", "468": "942ece91a16027c083be67bbb7b7624dd2e32317", "477": "7b135d77d3165f0443f46ec352889ae12e9946c5", "492": "e2b05907f2cd2a29913d82dfdc72ac40bf671ecf", "521": "b4bbdc1bce2fdf79fe59bce3e0b1698772d27616", "527": "fbe1c94d9c8de8e2454f7b93acd3e9a6b9cb8553", "528": "3a67d0c7dd2ac1f305b37c81a17e49365d693d79", "542": "071e56359b59f1c9d950add2afe4225565c1f5d9", "555": "89c3d3473e8b7e903490ec57df0199d74c78cb13", "561": "c585d0f49f78b2bf1f3a1cba41c979caa4ca9cb2", "567": "660b1e8c65a9f239fb61af38f25f63bbf0d4614e", "570": "c401f3d7e38f1ef60e7db877f4793c7e78f6c3bd", "582": "d4b4bd9aa2595cb98b8488b0040685fde375ef1f", "589": "af4bb8b690fb3f128ca29a78266b974319f54cc6", "592": "6d2874cdb74e152de9dfa413a14afc4488374c49", "595": "0bab520739bd2fc2a9353f090c2b41374dbe64b2", "600": "5a740fde67e99e030fb06100dd2fa0cc3f081e9c", "602": "56794962e31a4d3f75a6e0087c06be7e2a51a9d4"}, "revision_to_date": {"158": 1607082944000, "234": 1612362470000, "264": 1613143620000, "266": 1614162782000, "269": 1614163821000, "296": 1615221450000, "312": 1616170680000, "313": 1616173817000, "342": 1617569104000, "363": 1621460117000, "409": 1625515058000, "415": 1625781743000, "425": 1626957236000, "443": 1628858270000, "468": 1630327984000, "477": 1630429565000, "492": 1631269855000, "521": 1638980162000, "527": 1641926501000, "528": 1641933479000, "542": 1649084280000, "555": 1652953257000, "561": 1653034789000, "567": 1653313376000, "570": 1653489800000, "582": 1654557770000, "589": 1655205117000, "592": 1655808851000, "595": 1655906838000, "600": 1655971032000, "602": 1655998260000}, "params": {"arch": ["x86_64"], "cpu": ["2 GHz Quad-Core Intel Core i5"], "machine": ["nishant"], "num_cpu": ["4"], "os": ["Macintosh OS-X 11.3"], "ram": ["8"], "python": ["3.10"], "branch": ["master"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "2 GHz Quad-Core Intel Core i5", "machine": "nishant", "num_cpu": "4", "os": "Macintosh OS-X 11.3", "ram": "8", "python": "3.10", "branch": "master"}], "benchmarks": {"benchmarks.MemSuite_Generate_staypoints.mem_all_geolife_long": {"code": "class MemSuite_Generate_staypoints:\n    def mem_all_geolife_long(self):\n        \"\"\"Generate sp, tpls and trips of the original pfs for subsequent testing.\"\"\"\n        pfs, _ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", \"geolife_long\"))\n        pfs, sp = pfs.as_positionfixes.generate_staypoints(method=\"sliding\", dist_threshold=25, time_threshold=5)\n        sp = sp.as_staypoints.create_activity_flag(time_threshold=15)\n        pfs, tpls = pfs.as_positionfixes.generate_triplegs(sp, method=\"between_staypoints\")\n        sp, tpls, trips = ti.preprocessing.triplegs.generate_trips(sp, tpls, gap_threshold=15)\n    \n        return sp, tpls, trips", "name": "benchmarks.MemSuite_Generate_staypoints.mem_all_geolife_long", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "e88f8122d2bedec8219e17c6d472fe57ad26f187ecbad27117d4da3c30c30a2e"}, "benchmarks.MemSuite_Generate_staypoints.mem_sp_tpls_geolife_long": {"code": "class MemSuite_Generate_staypoints:\n    def mem_sp_tpls_geolife_long(self):\n        \"\"\"Generate sp and tpls sequences of the original pfs for subsequent testing.\"\"\"\n        pfs, _ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", \"geolife_long\"))\n        pfs, sp = pfs.as_positionfixes.generate_staypoints(method=\"sliding\", dist_threshold=25, time_threshold=5)\n        pfs, tpls = pfs.as_positionfixes.generate_triplegs(sp, method=\"between_staypoints\")\n    \n        tpls[\"type\"] = \"tripleg\"\n        sp[\"type\"] = \"staypoint\"\n        sp_tpls = pd.concat((sp, tpls), ignore_index=True).sort_values(by=\"started_at\")\n        return sp_tpls", "name": "benchmarks.MemSuite_Generate_staypoints.mem_sp_tpls_geolife_long", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "ca176577d6dbebbb056c62289f1aefb4fef59c80e0830fb42e625b3d4e528300"}, "benchmarks.TimeSuite_Generate_Staypoints.time_all_geolife_long": {"code": "class TimeSuite_Generate_Staypoints:\n    def time_all_geolife_long(self):\n        \"\"\"Generate sp, tpls and trips of the original pfs for subsequent testing.\"\"\"\n        pfs, _ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", \"geolife_long\"))\n        pfs, sp = pfs.as_positionfixes.generate_staypoints(method=\"sliding\", dist_threshold=25, time_threshold=5)\n        sp = sp.as_staypoints.create_activity_flag(time_threshold=15)\n        pfs, tpls = pfs.as_positionfixes.generate_triplegs(sp, method=\"between_staypoints\")\n        sp, tpls, trips = ti.preprocessing.triplegs.generate_trips(sp, tpls, gap_threshold=15)\n    \n        return sp, tpls, trips", "min_run_count": 2, "name": "benchmarks.TimeSuite_Generate_Staypoints.time_all_geolife_long", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "6cc8e6ff9e355c04eac7e8c902dfe1b2f84e74fbcb07a451e9ed9cb84e7c036c", "warmup_time": -1}, "benchmarks.TimeSuite_Generate_Staypoints.time_sp_tpls_geolife_long": {"code": "class TimeSuite_Generate_Staypoints:\n    def time_sp_tpls_geolife_long(self):\n        \"\"\"Generate sp and tpls sequences of the original pfs for subsequent testing.\"\"\"\n        pfs, _ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", \"geolife_long\"))\n        pfs, sp = pfs.as_positionfixes.generate_staypoints(method=\"sliding\", dist_threshold=25, time_threshold=5)\n        pfs, tpls = pfs.as_positionfixes.generate_triplegs(sp, method=\"between_staypoints\")\n    \n        tpls[\"type\"] = \"tripleg\"\n        sp[\"type\"] = \"staypoint\"\n        sp_tpls = pd.concat((sp, tpls), ignore_index=True).sort_values(by=\"started_at\")\n        return sp_tpls", "min_run_count": 2, "name": "benchmarks.TimeSuite_Generate_Staypoints.time_sp_tpls_geolife_long", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "458d854defc7d2f2c8ca7f3ddbffab75bbfb5e9d59fc9592dba0414b3b030536", "warmup_time": -1}}, "machines": {"nishant": {"arch": "x86_64", "cpu": "2 GHz Quad-Core Intel Core i5", "machine": "nishant", "num_cpu": "4", "os": "Macintosh OS-X 11.3", "ram": "8", "version": 1}}, "tags": {"0.4": 158, "0.4.1": 234, "1.1.8": 570, "v0.5.0": 264, "v0.5.0.1": 266, "v0.5.0.2": 269, "v0.5.1": 296, "v0.5.2": 312, "v0.5.3": 313, "v0.6.0": 342, "v1.0.0": 363, "v1.1.0": 409, "v1.1.1": 415, "v1.1.10": 602, "v1.1.2": 425, "v1.1.3": 443, "v1.1.4": 468, "v1.1.5": 521, "v1.1.6": 555, "v1.1.7": 561, "v1.1.9": 582}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}