{"project": "trackintel", "project_url": "https://github.com/mie-lab/trackintel", "show_commit_url": "https://github.com/mie-lab/trackintel/commit/", "hash_length": 8, "revision_to_hash": {"158": "c9645c4d116a515f28eb4a957b99401305a42e04", "234": "c7867a6f88978a48406b349063d225d53bf0ddfa", "264": "377a0dadab3bb8dd9f6a22fc71eb05ff09a53261", "291": "8103e109070af3c76a744aaa0b1e596e39fa5466", "307": "4e16938603ec332274fc51e27095552b84b419c9", "308": "6139392b2b17b60ba0fba122d94cbc912fbb3c25", "337": "af3866f76fd27d3f5ddc213f9018ec792f8907d0", "467": "3a67d0c7dd2ac1f305b37c81a17e49365d693d79", "481": "071e56359b59f1c9d950add2afe4225565c1f5d9", "506": "660b1e8c65a9f239fb61af38f25f63bbf0d4614e", "528": "af4bb8b690fb3f128ca29a78266b974319f54cc6", "531": "6d2874cdb74e152de9dfa413a14afc4488374c49", "534": "0bab520739bd2fc2a9353f090c2b41374dbe64b2", "539": "5a740fde67e99e030fb06100dd2fa0cc3f081e9c"}, "revision_to_date": {"158": 1607082944000, "234": 1612362470000, "264": 1613143620000, "291": 1615221450000, "307": 1616170680000, "308": 1616173817000, "337": 1617569104000, "467": 1641933479000, "481": 1649084280000, "506": 1653313376000, "528": 1655205117000, "531": 1655808851000, "534": 1655906838000, "539": 1655971032000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Core(TM) i3-3217U CPU @ 1.80GHz"], "machine": ["ubuntu-bm"], "num_cpu": ["4"], "os": ["Ubuntu-20"], "ram": ["2GB"], "python": ["3.9"], "branch": ["asv-trackintel"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Core(TM) i3-3217U CPU @ 1.80GHz", "machine": "ubuntu-bm", "num_cpu": "4", "os": "Ubuntu-20", "ram": "2GB", "python": "3.9", "branch": "asv-trackintel"}], "benchmarks": {"preprocessing_benchmarks.BM_Generate_SP.mem_gen_sp_geolife_long": {"code": "class BM_Generate_SP:\n    def mem_gen_sp_geolife_long(self):\n        return self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        self.pfs, self._ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))", "name": "preprocessing_benchmarks.BM_Generate_SP.mem_gen_sp_geolife_long", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "cd88c2bb9aa13e4db795ee5036ef7d6018bdc70837706bc5c071dd40dead544f"}, "preprocessing_benchmarks.BM_Generate_SP.peakmem_gen_sp_geolife_long": {"code": "class BM_Generate_SP:\n    def peakmem_gen_sp_geolife_long(self):\n        self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        self.pfs, self._ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))", "name": "preprocessing_benchmarks.BM_Generate_SP.peakmem_gen_sp_geolife_long", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "e4523c072064cbb4c9b57342db7c7243a016462bea0c5cb9f3059099f623ae7e"}, "preprocessing_benchmarks.BM_Generate_SP.time_gen_sp_geolife_long": {"code": "class BM_Generate_SP:\n    def time_gen_sp_geolife_long(self):\n        self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        self.pfs, self._ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))", "min_run_count": 2, "name": "preprocessing_benchmarks.BM_Generate_SP.time_gen_sp_geolife_long", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "38cc3197bfdbc3827ce3699d9ef1d94024839c46588d600b7668f05c9a35bfa6", "warmup_time": -1}, "preprocessing_benchmarks.BM_Generate_TOURS.mem_gen_tours_geolife_long": {"code": "class BM_Generate_TOURS:\n    def mem_gen_tours_geolife_long(self):\n        return self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        pfs, _ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))\n        pfs, sp = pfs.as_positionfixes.generate_staypoints(method=\"sliding\", dist_threshold=25, time_threshold=5)\n        pfs, tpls = pfs.as_positionfixes.generate_triplegs(sp, method=\"between_staypoints\")\n        sp = sp.as_staypoints.create_activity_flag(time_threshold=15)\n        _, _, self.trips = ti.preprocessing.triplegs.generate_trips(sp, tpls)", "name": "preprocessing_benchmarks.BM_Generate_TOURS.mem_gen_tours_geolife_long", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "96996754e20c1b33c990909e1ae0592450c40332a3c74b925865834fe785bbb6"}, "preprocessing_benchmarks.BM_Generate_TOURS.peakmem_gen_tours_geolife_long": {"code": "class BM_Generate_TOURS:\n    def peakmem_gen_tours_geolife_long(self):\n        self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        pfs, _ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))\n        pfs, sp = pfs.as_positionfixes.generate_staypoints(method=\"sliding\", dist_threshold=25, time_threshold=5)\n        pfs, tpls = pfs.as_positionfixes.generate_triplegs(sp, method=\"between_staypoints\")\n        sp = sp.as_staypoints.create_activity_flag(time_threshold=15)\n        _, _, self.trips = ti.preprocessing.triplegs.generate_trips(sp, tpls)", "name": "preprocessing_benchmarks.BM_Generate_TOURS.peakmem_gen_tours_geolife_long", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "b0d48590388f93f23e15b125c1f4c2a0de989a166538d4c1c13305b1512416ce"}, "preprocessing_benchmarks.BM_Generate_TOURS.time_gen_tours_geolife_long": {"code": "class BM_Generate_TOURS:\n    def time_gen_tours_geolife_long(self):\n        self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        pfs, _ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))\n        pfs, sp = pfs.as_positionfixes.generate_staypoints(method=\"sliding\", dist_threshold=25, time_threshold=5)\n        pfs, tpls = pfs.as_positionfixes.generate_triplegs(sp, method=\"between_staypoints\")\n        sp = sp.as_staypoints.create_activity_flag(time_threshold=15)\n        _, _, self.trips = ti.preprocessing.triplegs.generate_trips(sp, tpls)", "min_run_count": 2, "name": "preprocessing_benchmarks.BM_Generate_TOURS.time_gen_tours_geolife_long", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "bf09379dc9763990797132669eb3016634b68d40ad8ca3168c4c74ae7a58447a", "warmup_time": -1}, "preprocessing_benchmarks.BM_Generate_TPLS.mem_gen_tpls_geolife_long": {"code": "class BM_Generate_TPLS:\n    def mem_gen_tpls_geolife_long(self):\n        return self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        self.pfs, self._ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))\n        self.pfs, self.sp = self.pfs.as_positionfixes.generate_staypoints(\n            method=\"sliding\", dist_threshold=25, time_threshold=5\n        )", "name": "preprocessing_benchmarks.BM_Generate_TPLS.mem_gen_tpls_geolife_long", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "3f403c626fda83fcebaf4121f2c39adb802b6e112fc12df0ea6a80d3ce6a2d40"}, "preprocessing_benchmarks.BM_Generate_TPLS.peakmem_gen_tpls_geolife_long": {"code": "class BM_Generate_TPLS:\n    def peakmem_gen_tpls_geolife_long(self):\n        self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        self.pfs, self._ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))\n        self.pfs, self.sp = self.pfs.as_positionfixes.generate_staypoints(\n            method=\"sliding\", dist_threshold=25, time_threshold=5\n        )", "name": "preprocessing_benchmarks.BM_Generate_TPLS.peakmem_gen_tpls_geolife_long", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "9444a93d267f0c2d8bfeb4020b501849cb8ee75af5d50f2ec7a27a6c2b97a59c"}, "preprocessing_benchmarks.BM_Generate_TPLS.time_gen_tpls_geolife_long": {"code": "class BM_Generate_TPLS:\n    def time_gen_tpls_geolife_long(self):\n        self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        self.pfs, self._ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))\n        self.pfs, self.sp = self.pfs.as_positionfixes.generate_staypoints(\n            method=\"sliding\", dist_threshold=25, time_threshold=5\n        )", "min_run_count": 2, "name": "preprocessing_benchmarks.BM_Generate_TPLS.time_gen_tpls_geolife_long", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "2676e6e56a8bec095be8e715489cef41e446fa5f1a1575c32b786320900c16e0", "warmup_time": -1}, "preprocessing_benchmarks.BM_Generate_TRIPS.mem_gen_trips_geolife_long": {"code": "class BM_Generate_TRIPS:\n    def mem_gen_trips_geolife_long(self):\n        return self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        pfs, _ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))\n        pfs, sp = pfs.as_positionfixes.generate_staypoints(method=\"sliding\", dist_threshold=25, time_threshold=5)\n        pfs, self.tpls = pfs.as_positionfixes.generate_triplegs(sp, method=\"between_staypoints\")\n        self.sp = sp.as_staypoints.create_activity_flag(time_threshold=15)", "name": "preprocessing_benchmarks.BM_Generate_TRIPS.mem_gen_trips_geolife_long", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "aec6a2a8d919ca0a1fffd4f8278d4990d22a915f56117f9e7a19514e1e3295ae"}, "preprocessing_benchmarks.BM_Generate_TRIPS.peakmem_gen_trips_geolife_long": {"code": "class BM_Generate_TRIPS:\n    def peakmem_gen_trips_geolife_long(self):\n        self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        pfs, _ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))\n        pfs, sp = pfs.as_positionfixes.generate_staypoints(method=\"sliding\", dist_threshold=25, time_threshold=5)\n        pfs, self.tpls = pfs.as_positionfixes.generate_triplegs(sp, method=\"between_staypoints\")\n        self.sp = sp.as_staypoints.create_activity_flag(time_threshold=15)", "name": "preprocessing_benchmarks.BM_Generate_TRIPS.peakmem_gen_trips_geolife_long", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "74f7660c75a7ddebbc1977a560597ee26d9bdb6a0f1bb0f4921cf03d5c62add0"}, "preprocessing_benchmarks.BM_Generate_TRIPS.time_gen_trips_geolife_long": {"code": "class BM_Generate_TRIPS:\n    def time_gen_trips_geolife_long(self):\n        self.common_func()\n\n    def setup(self):\n        os.chdir(trackintel_root)\n        pfs, _ = ti.io.dataset_reader.read_geolife(os.path.join(\"tests\", \"data\", bm_dataset))\n        pfs, sp = pfs.as_positionfixes.generate_staypoints(method=\"sliding\", dist_threshold=25, time_threshold=5)\n        pfs, self.tpls = pfs.as_positionfixes.generate_triplegs(sp, method=\"between_staypoints\")\n        self.sp = sp.as_staypoints.create_activity_flag(time_threshold=15)", "min_run_count": 2, "name": "preprocessing_benchmarks.BM_Generate_TRIPS.time_gen_trips_geolife_long", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "37a1620dc4d3cbb4cd6d012f166d152fc260a4a5a498cf35ec53a81147fe2bd3", "warmup_time": -1}, "preprocessing_benchmarks.BM_Read_PFS.mem_read_pfs": {"code": "class BM_Read_PFS:\n    def mem_read_pfs(self):\n        return self.common_func()", "name": "preprocessing_benchmarks.BM_Read_PFS.mem_read_pfs", "param_names": [], "params": [], "timeout": 60.0, "type": "memory", "unit": "bytes", "version": "9266993997b0926995567602b8dae09db5c853ebd5a0378ddf18ac0c664259ca"}, "preprocessing_benchmarks.BM_Read_PFS.peakmem_read_pfs": {"code": "class BM_Read_PFS:\n    def peakmem_read_pfs(self):\n        self.common_func()", "name": "preprocessing_benchmarks.BM_Read_PFS.peakmem_read_pfs", "param_names": [], "params": [], "timeout": 60.0, "type": "peakmemory", "unit": "bytes", "version": "25bf18b44cc7682e346f5eda52f22fa6ef55016e3f5ebcd59b8107d8a5238a0e"}, "preprocessing_benchmarks.BM_Read_PFS.time_read_pfs": {"code": "class BM_Read_PFS:\n    def time_read_pfs(self):\n        self.common_func()", "min_run_count": 2, "name": "preprocessing_benchmarks.BM_Read_PFS.time_read_pfs", "number": 0, "param_names": [], "params": [], "repeat": 0, "rounds": 2, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c91dcfb6e7b0d4b9d8d9bf6337ee25133688745ed6c8cee5703ea68517e7adcf", "warmup_time": -1}}, "machines": {"ubuntu-bm": {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i3-3217U CPU @ 1.80GHz", "machine": "ubuntu-bm", "num_cpu": "4", "os": "Ubuntu-20", "ram": "2GB", "version": 1}}, "tags": {"0.4": 158, "0.4.1": 234, "v0.5.0": 264, "v0.5.1": 291, "v0.5.2": 307, "v0.5.3": 308, "v0.6.0": 337}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}